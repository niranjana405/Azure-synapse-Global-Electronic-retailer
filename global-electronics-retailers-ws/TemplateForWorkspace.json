{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "global-electronics-retailers-ws"
		},
		"global-electronics-retailers-ws-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'global-electronics-retailers-ws-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:global-electronics-retailers-ws.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"global-electronics-retailers-ws-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://globalelectronicsadls.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/DedicatedP1')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_globalelectronic_customers')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "global-electronics-retailers-ws-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "part-00000-ecd63196-5bf9-42a9-8aab-56d3ec612858-c000.snappy.parquet",
						"folderPath": "GlobalElectronicTrainingData/CustomersTrainingData",
						"fileSystem": "global-electronic-files"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "CustomerKey",
						"type": "UTF8"
					},
					{
						"name": "Gender",
						"type": "UTF8"
					},
					{
						"name": "Name",
						"type": "UTF8"
					},
					{
						"name": "City",
						"type": "UTF8"
					},
					{
						"name": "State Code",
						"type": "UTF8"
					},
					{
						"name": "State",
						"type": "UTF8"
					},
					{
						"name": "Zip Code",
						"type": "UTF8"
					},
					{
						"name": "Country",
						"type": "UTF8"
					},
					{
						"name": "Continent",
						"type": "UTF8"
					},
					{
						"name": "Birthday",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/global-electronics-retailers-ws-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sqlpool_DedicatedP1_Customers')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "global-electronics-retailers-ws-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customers1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/global-electronics-retailers-ws-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/global-electronics-retailers-ws-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('global-electronics-retailers-ws-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/global-electronics-retailers-ws-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('global-electronics-retailers-ws-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://globalelectronicsadls.dfs.core.windows.net/global-electronic-files/Global Electronics Retailers/Customers.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0'\n    ) AS [result]\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 3')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://globalelectronicsadls.dfs.core.windows.net/global-electronic-files/GlobalElectronicTrainingData/partionedData/PRODUCTKEY=10',\n        FORMAT = 'CSV',\n        HEADER_ROW=TRUE,\n        PARSER_VERSION = '2.0'\n    ) AS [result]\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 5')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- Order volume trend by month\nSELECT \n    EXTRACT(MONTH FROM OrderDate) AS Month,\n    COUNT(*) AS OrderCount\nFROM \n    SALES\nGROUP BY \n    EXTRACT(MONTH FROM OrderDate)\nORDER BY \n    Month;\n\n-- Revenue trend by month\nSELECT \n    EXTRACT(MONTH FROM OrderDate) AS Month,\n    SUM(Quantity * UnitPriceUSD) AS Revenue\nFROM \n    SALES\nJOIN \n    PRODUCTS ON SALES.ProductKey = PRODUCTS.ProductKey\nGROUP BY \n    EXTRACT(MONTH FROM OrderDate)\nORDER BY \n    Month;\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 6')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://globalelectronicsadls.dfs.core.windows.net/global-electronic-files/Global Electronics Retailers/Customers.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0'\n    ) AS [result]\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 7')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'global-electronic-files_globalelectronicsadls_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [global-electronic-files_globalelectronicsadls_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://global-electronic-files@globalelectronicsadls.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE dbo.Stores (\n\t[StoreKey] nvarchar(4000),\n\t[Country] nvarchar(4000),\n\t[State] nvarchar(4000),\n\t[Square Meters] nvarchar(4000),\n\t[Open Date] nvarchar(4000)\n\t)\n\tWITH (\n\tLOCATION = 'GlobalElectronicTrainingData/StoresTrainingData/part-00000-8b7f9117-64f7-4a48-811a-d322c22ffcf4-c000.snappy.parquet',\n\tDATA_SOURCE = [global-electronic-files_globalelectronicsadls_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM dbo.Stores\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "ServerlessP1",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script Ex TableSales')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'global-electronic-files_globalelectronicsadls_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [global-electronic-files_globalelectronicsadls_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://global-electronic-files@globalelectronicsadls.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE dbo.Sales (\n\t[Order Number] nvarchar(4000),\n\t[Line Item] nvarchar(4000),\n\t[Order Date] nvarchar(4000),\n\t[Delivery Date] nvarchar(4000),\n\t[CustomerKey] nvarchar(4000),\n\t[StoreKey] nvarchar(4000),\n\t[ProductKey] nvarchar(4000),\n\t[Quantity] nvarchar(4000),\n\t[Currency Code] nvarchar(4000)\n\t)\n\tWITH (\n\tLOCATION = 'GlobalElectronicTrainingData/SalesTrainingData/part-00000-ebfab0e3-6522-44f8-946f-74e71ff4ac7e-c000.snappy.parquet',\n\tDATA_SOURCE = [global-electronic-files_globalelectronicsadls_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nselect * from dbo.sales where StoreKey='10'\nSELECT TOP 100 * FROM dbo.Sales\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "ServerlessP1",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script ExTable Customers')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'global-electronic-files_globalelectronicsadls_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [global-electronic-files_globalelectronicsadls_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://global-electronic-files@globalelectronicsadls.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE dbo.Customers (\n\t[CustomerKey] nvarchar(4000),\n\t[Gender] nvarchar(4000),\n\t[Name] nvarchar(4000),\n\t[City] nvarchar(4000),\n\t[State Code] nvarchar(4000),\n\t[State] nvarchar(4000),\n\t[Zip Code] nvarchar(4000),\n\t[Country] nvarchar(4000),\n\t[Continent] nvarchar(4000),\n\t[Birthday] nvarchar(4000)\n\t)\n\tWITH (\n\tLOCATION = 'GlobalElectronicTrainingData/CustomersTrainingData/part-00000-ecd63196-5bf9-42a9-8aab-56d3ec612858-c000.snappy.parquet',\n\tDATA_SOURCE = [global-electronic-files_globalelectronicsadls_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM dbo.Customers\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "ServerlessP1",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script ExTable Exchange_rates')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'global-electronic-files_globalelectronicsadls_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [global-electronic-files_globalelectronicsadls_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://global-electronic-files@globalelectronicsadls.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE dbo.Exchange_rates (\n\t[Date] nvarchar(4000),\n\t[Currency] nvarchar(4000),\n\t[Exchange] nvarchar(4000)\n\t)\n\tWITH (\n\tLOCATION = 'GlobalElectronicTrainingData/Exchange_ratesTrainingData/part-00000-5cfca5d3-8a39-4c8b-8161-ce60cda35127-c000.snappy.parquet',\n\tDATA_SOURCE = [global-electronic-files_globalelectronicsadls_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM dbo.Exchange_rates\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "ServerlessP1",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script ExTable Products')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'global-electronic-files_globalelectronicsadls_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [global-electronic-files_globalelectronicsadls_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://global-electronic-files@globalelectronicsadls.dfs.core.windows.net' \n\t)\nGO\nCREATE EXTERNAL TABLE dbo.Products (\n\t[ProductKey] nvarchar(4000),\n\t[Product Name] nvarchar(4000),\n\t[Brand] nvarchar(4000),\n\t[Color] nvarchar(4000),\n\t[Unit Cost USD] nvarchar(4000),\n\t[Unit Price USD] nvarchar(4000),\n\t[SubcategoryKey] nvarchar(4000),\n\t[Subcategory] nvarchar(4000),\n\t[CategoryKey] nvarchar(4000),\n\t[Category] nvarchar(4000)\n\t)\n\tWITH (\n\tLOCATION = 'GlobalElectronicTrainingData/ProductsTrainingData/part-00000-2fd029f6-5651-4698-acbd-fc974302060b-c000.snappy.parquet',\n\tDATA_SOURCE = [global-electronic-files_globalelectronicsadls_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM dbo.Products\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "ServerlessP1",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "Sparkpool1",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "d6560637-d94c-44e1-b007-f7108919e84a"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/60f3b90b-c4ce-462d-b45e-dd2991da7fac/resourceGroups/Global-Electronics-Retailers/providers/Microsoft.Synapse/workspaces/global-electronics-retailers-ws/bigDataPools/Sparkpool1",
						"name": "Sparkpool1",
						"type": "Spark",
						"endpoint": "https://global-electronics-retailers-ws.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/Sparkpool1",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.4",
						"nodeCount": 10,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\r\n",
							"df = spark.read.load('abfss://global-electronic-files@globalelectronicsadls.dfs.core.windows.net/Global Electronics Retailers/Sales.csv', format='csv'\r\n",
							"## If header exists uncomment line below\r\n",
							", header=True\r\n",
							")\r\n",
							"display(df.limit(10))"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"df.write.parquet('abfss://global-electronic-files@globalelectronicsadls.dfs.core.windows.net/GlobalElectronicTrainingData/SalesTrainingData', mode='overwrite')"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\n",
							"customers = spark.read.load('abfss://global-electronic-files@globalelectronicsadls.dfs.core.windows.net/Global Electronics Retailers/Customers.csv', format='csv'\n",
							"## If header exists uncomment line below\n",
							", header=True\n",
							")\n",
							"display(df.limit(10))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"customers.write.parquet('abfss://global-electronic-files@globalelectronicsadls.dfs.core.windows.net/GlobalElectronicTrainingData/CustomersTrainingData', mode='overwrite')"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\n",
							"Exchange_rates = spark.read.load('abfss://global-electronic-files@globalelectronicsadls.dfs.core.windows.net/Global Electronics Retailers/Exchange_Rates.csv', format='csv'\n",
							"## If header exists uncomment line below\n",
							", header=True\n",
							")\n",
							"display(df.limit(10))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Exchange_rates.write.parquet('abfss://global-electronic-files@globalelectronicsadls.dfs.core.windows.net/GlobalElectronicTrainingData/Exchange_ratesTrainingData', mode='overwrite')"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\n",
							"Products = spark.read.load('abfss://global-electronic-files@globalelectronicsadls.dfs.core.windows.net/Global Electronics Retailers/Products.csv', format='csv'\n",
							"## If header exists uncomment line below\n",
							", header=True\n",
							")\n",
							"display(df.limit(10))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Products.write.parquet('abfss://global-electronic-files@globalelectronicsadls.dfs.core.windows.net/GlobalElectronicTrainingData/ProductsTrainingData', mode='overwrite')"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\n",
							"Stores = spark.read.load('abfss://global-electronic-files@globalelectronicsadls.dfs.core.windows.net/Global Electronics Retailers/Stores.csv', format='csv'\n",
							"## If header exists uncomment line below\n",
							", header=True\n",
							")\n",
							"display(df.limit(10))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Stores.write.parquet('abfss://global-electronic-files@globalelectronicsadls.dfs.core.windows.net/GlobalElectronicTrainingData/StoresTrainingData', mode='overwrite')"
						],
						"outputs": [],
						"execution_count": 20
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Sparkpool1')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 10,
					"minNodeCount": 3
				},
				"nodeCount": 10,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.4",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus2"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DedicatedP1')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus2"
		}
	]
}